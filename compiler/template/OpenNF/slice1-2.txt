
using namespace std;
///////////
GlobalConfig config;
///////
long _counter,_sum = 0;
clock_t begin_t;
clock_t end_t;
u_char *packet;
pcap_t *phandle;
pcap_t *phandle_eth2;
int _allTput=0;
unordered_map<string,int> F_Type::MAP = unordered_map<string,int>();
int process(Flow &f);
Flow f_glb;
struct itimerval tick;
sigset_t newmask;

struct timeval begin_time;
struct timeval end_time;
u_char* packet_set[1000000];
int total_len[1000000];
long int pktindex = 0;

void decodePkt(const u_char *pkt_data)
{
    printf("    Mac : %2x:%2x:%2x:%2x:%2x:%2x",pkt_data[6],pkt_data[7],pkt_data[8],pkt_data[9],pkt_data[10],pkt_data[11]);
    printf(" -> %2x:%2x:%2x:%2x:%2x:%2x\n",pkt_data[0],pkt_data[1],pkt_data[2],pkt_data[3],pkt_data[4],pkt_data[5]);
    printf("    IP  : %3d.%3d.%3d.%3d",pkt_data[26],pkt_data[27],pkt_data[28],pkt_data[29]);
    printf("   -> %3d.%3d.%3d.%3d\n",pkt_data[30],pkt_data[31],pkt_data[32],pkt_data[33]);
}


void stop(int signo)
{
    end_t = clock();
    double total;
    total = (double)(end_t - begin_t)/CLOCKS_PER_SEC;
    printf("\n\n**************************************************\n");
    printf("%ld are forwarded ! Average Tput is %f \n",_counter, _counter / total);
    printf("counter = %ld  sum = %ld  begin = %ld  end = %ld \n", _counter, _sum, begin_t ,end_t);
    printf("**************************************************\n\n");
    _exit(0);
}

/* !!!!!!!!!!!!!!!!!!!!!!!!!!*/
/* INSERTION STARTS FROM HERE*/
